/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.27
 * Generated at: 2020-04-29 00:19:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.xue.book.model.Book;
import com.xue.book.model.BookUser;

public final class book_005fbuy_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.xue.book.model.BookUser");
    _jspx_imports_classes.add("com.xue.book.model.Book");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
BookUser user = (BookUser)session.getAttribute("user"); 
      out.write('\r');
      out.write('\n');
Book book = (Book)request.getAttribute("book"); 
      out.write('\r');
      out.write('\n');
String alert = (String)request.getAttribute("alert"); 
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<!--加载btn和text格式-->\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"css/customer_btn_and_text_style.css\"/>\r\n");
      out.write("\t\t<!-- 新 Bootstrap 核心 CSS 文件 -->\r\n");
      out.write("\t\t<link rel=\"stylesheet\" \thref=\"http://cdn.bootcss.com/bootstrap/3.3.0/css/bootstrap.min.css\">\r\n");
      out.write("\t\t<!-- 可选的Bootstrap主题文件（一般不用引入） -->\r\n");
      out.write("\t\t<link rel=\"stylesheet\" \thref=\"http://cdn.bootcss.com/bootstrap/3.3.0/css/bootstrap-theme.min.css\">\r\n");
      out.write("\t\t<!-- jQuery文件。务必在bootstrap.min.js 之前引入 -->\r\n");
      out.write("\t\t<script \tsrc=\"http://cdn.bootcss.com/jquery/1.11.1/jquery.min.js\"></script>\r\n");
      out.write("\t\t<!-- 最新的 Bootstrap 核心 JavaScript 文件 -->\r\n");
      out.write("\t\t<script \tsrc=\"http://cdn.bootcss.com/bootstrap/3.3.0/js/bootstrap.min.js\"></script>\r\n");
      out.write("\t\t<style>\r\n");
      out.write("\t\t\t#user_id{\r\n");
      out.write("\t\t\t\tposition: absolute;\r\n");
      out.write("\t\t\t\tleft: 95%;\r\n");
      out.write("\t\t\t\ttop: 0%;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t#divcenter{\r\n");
      out.write("\t\t\t\tposition: absolute;\r\n");
      out.write("\t\t\t\tleft: 50%;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t#user_id{\r\n");
      out.write("\t\t\t\tposition: absolute;\r\n");
      out.write("\t\t\t\tleft: 95%;\r\n");
      out.write("\t\t\t\ttop: 0%;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t</style>\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"css/customer_btn_and_text_style.css\"/>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<h1 class=\"text-center\" contenteditable=\"true\" style=\"color:#2d78f4;\"></h1>\r\n");
      out.write("\t<div id=\"user_id\">");
      out.print(user.getId() );
      out.write("</div>\r\n");
      out.write("\t<div id=\"divcenter\">\r\n");
      out.write("\t<form action=\"BookServlet\" method=\"post\" onsubmit = confirm1() >\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"flag\" value=\"gobuyok\" />\r\n");
      out.write("\t");
if (alert != null ) {
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.print(alert );
      out.write('\r');
      out.write('\n');
      out.write('	');
} 
      out.write("\r\n");
      out.write("\t<table class=\"table\" cellpadding=\"20px\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td class=\"txtlogin\">书名</td>\r\n");
      out.write("\t\t\t<td class=\"td\"><input type=\"text\" style=\"text-align: center;\" name=\"name\" value=");
      out.print(book.getName() );
      out.write(" readonly=\"readonly\" /> </td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td class=\"txtlogin\">购买数量</td>\r\n");
      out.write("\t\t\t<td class=\"td\"><input type=\"text\" name=\"store\" /></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td></td>\r\n");
      out.write("\t\t\t<td class=\"td\"><input type=\"submit\" class=\"submitregist\" value=\"购买\"/></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("var store = document.getElementsByName(\"store\");  //数组\r\n");
      out.write("function confirm1() {\r\n");
      out.write("\tvar sum = store[0].value * ");
      out.print(book.getPrice() );
      out.write(";\r\n");
      out.write(" \tvar result = confirm(\"总价\" + sum + \"元，是否购买\");\r\n");
      out.write(" \treturn result;\r\n");
      out.write("}\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

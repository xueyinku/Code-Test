<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.xue.dao.BookDao">
	<!-- 
		Mybatis中所有的内容写在mapper标签中！
		namespace属性：命名空间(映射代理接口)(写的是代理接口的全类名：包名+类名)
	 -->
	<insert id="insertBook" parameterType="com.xue.model.Book">
		<!-- 
			id属性：映射对应的代理方法(方法名)
			parameterType属性：映射对应代理方法的参数类型(全类名)
		 -->
		insert into book values(default, #{bookName}, #{bookAuthor}, #{bookPrice})
		<!-- 
			Mybatis编写SQL语句时，通过#{占位符赋值内容}当作占位符
			注意：当参数是实体类对象时，需要靠对象的成员变量给占位符赋值，大括号中只需要写实体类成员变量名即可！
		 -->
	</insert>
	<update id="updateBook" parameterType="com.xue.model.Book">
		update book set book_name = #{bookName},
		book_author = #{bookAuthor},
		book_price = #{bookPrice} 
		where book_id = #{id}   
	</update>
	<delete id="deleteBook" parameterType="int">
	<!-- 
	注意常数是对象时，#{对象的成员变量名}
	如果数据是单一数据类型时（整数，小数，字符串），#{} 中随意写！！！zuihaoxie value
	 -->
		delete from book
		 where book_id = #{id}
	</delete>
	
	<select id="findBook" resultType="com.xue.model.Book">
	<!-- 
	   parameterType属性：映射对应代理方法的常数类型（全类名）  ！！！写不写均可
	   重点：查询时恤要定义resultType属性
	  resultType属性 ：映射方法的返回值类型（增删改没有这个属性，但是查询必须写这个属性）
	  （当查询时返回值类型是集合时，resultType 中只需要写集合中所装的数据类型即可!）
	 -->
	 
	 <!-- 
	  注意：由于查询语句需要将查询的结果装到对象中，必须保证查询的字段名和成员变量名一致，才能装值
	  -->
	 select 
	 	 book_id as id,
		 book_name as bookName,
		 book_author as bookAuthor,
		 book_price as bookPrice
		 from book 
	</select>
	<select id="findBookByname" resultType="com.xue.model.Book">
		select
		 	book_id as id,
		 	book_name as bookName,
		 	book_author as bookAuthor,
		 	book_price as bookPrice
		 	from book
		 	where book_name like "%" #{value} "%"
		 	<!-- 只能用于传string数据，别的不行 -->
		 	<!-- where book_name like '%${value}%'
		 	通过品阶符凭借sql 利用${}发但是回迎来sql注入攻击
		 	#{}：占位符：自动拼接单引号
		 	${}：占位符，不会自动拼接单引号，但是会迎来sql注入攻击
		 	 -->
		 	
		 	<!-- 
		 	  where book_name like concat(‘%’,#{value},‘%’)
		 	  代码过于复杂
		 	  -->
	</select>
</mapper>
